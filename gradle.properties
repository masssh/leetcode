################################
# Gradle Properties
# ##############################

# When set to true, Gradle will reuse task outputs from any previous build,
# when possible, resulting is much faster builds.
# Learn more about using the build cache.
# org.gradle.caching=(true,false)
org.gradle.caching=true

# When set to true, individual input property hashes and the build cache key for
# each task are logged on the console. Learn more about task output caching.
# org.gradle.caching.debug=(true,false)
org.gradle.caching.debug=true

# Enables incubating configuration on demand, where Gradle will attempt to
# configure only necessary projects.
# org.gradle.configureondemand=(true,false)
org.gradle.configureondemand=false

# Customize console output coloring or verbosity. Default depends on
# how Gradle is invoked. See command-line logging for additional details.
# org.gradle.console=(auto,plain,rich,verbose)
org.gradle.console=auto

# When set to true the Gradle Daemon is used to run the build. Default is true.
# org.gradle.daemon=(true,false)
org.gradle.daemon=true

# Gradle Daemon will terminate itself after specified number of idle milliseconds.
# Default is 10800000 (3 hours).
# org.gradle.daemon.idletimeout=(# of idle millis)
org.gradle.daemon.idletimeout=10800000

# When set to true, Gradle will run the build with remote debugging enabled,
# listening on port 5005. Note that this is the equivalent of
# adding -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005 to
# the JVM command line and will suspend the virtual machine
# until a debugger is attached. Default is false.
# org.gradle.debug=(true,false)
org.gradle.debug=false

# Specifies the Java home for the Gradle build process. The value can be set to
# either a jdk or jre location, however, depending on what your build does,
# using a JDK is safer. A reasonable default is derived from your environment
# (JAVA_HOME or the path to java) if the setting is unspecified.
# This does not affect the version of Java used to launch the Gradle client VM
# (see Environment variables).
# org.gradle.java.home=(path to JDK home)

# Specifies the JVM arguments used for the Gradle Daemon.
# The setting is particularly useful for configuring JVM memory settings for
# build performance. This does not affect the JVM settings for the Gradle client VM.
# org.gradle.jvmargs=(JVM arguments)
org.gradle.jvmargs=-Xms512m -Xmx512m

# When set to quiet, warn, lifecycle, info, or debug, Gradle will use this log level.
# The values are not case sensitive. The lifecycle level is the default.
# See Choosing a log level.
# org.gradle.logging.level=(quiet,warn,lifecycle,info,debug)
org.gradle.logging.level=lifecycle

# When configured, Gradle will fork up to org.gradle.workers.max JVMs to execute projects
# in parallel. To learn more about parallel task execution,
# see the Gradle performance guide.
# org.gradle.parallel=(true,false)
org.gradle.parallel=true

# When set to all, summary or none, Gradle will use different warning type display.
# See Command-line logging options for details.
# org.gradle.warning.mode=(all,none,summary)
org.gradle.warning.mode=all

# When configured, Gradle will use a maximum of the given number of workers.
# Default is number of CPU processors. See also performance command-line options.
# org.gradle.workers.max=(max # of worker processes)

# Specifies the scheduling priority for the Gradle daemon and all processes launched by it
# Default is normal. See also performance command-line options.
# org.gradle.priority=(low,normal)
org.gradle.priority=normal



################################
# System Properties
# ##############################

# Specify user name to download Gradle distributions from servers using
# HTTP Basic Authentication. Learn more in Authenticated wrapper downloads.
# systemProp.gradle.wrapperUser=(myuser)

# Specify password for downloading a Gradle distribution using the Gradle wrapper.
# systemProp.gradle.wrapperPassword=(mypassword)

# Specify the Gradle user home directory.
#
# !Notice: This setting works only when using gradle wrapper!
# systemProp.gradle.user.home=(path to directory)
systemProp.gradle.user.home=./.gradle.user.home

# Java Runtime Environment version
# systemProp.java.version=

# Java Runtime Environment vendor
# systemProp.java.vendor=

# Java vendor URL
# systemProp.java.vendor.url=

# Java installation directory
# systemProp.java.home=

# Java Virtual Machine specification version
# systemProp.java.vm.specification.version=

# Java Virtual Machine specification vendor
# systemProp.java.vm.specification.vendor=

# Java Virtual Machine specification name
# systemProp.java.vm.specification.name=

# Java Virtual Machine implementation version
# systemProp.java.vm.version=

# Java Virtual Machine implementation vendor
# systemProp.java.vm.vendor=

# Java Virtual Machine implementation name
# systemProp.java.vm.name=

# Java Runtime Environment specification version
# systemProp.java.specification.version=

# Java Runtime Environment specification vendor
# systemProp.java.specification.vendor=

# Java Runtime Environment specification name
# systemProp.java.specification.name=

# Java class format version number
# systemProp.java.class.version=

# Java class path
# systemProp.java.class.path=

# List of paths to search when loading libraries
# systemProp.java.library.path=

# Default temp file path
# systemProp.java.io.tmpdir=

# Name of JIT compiler to use
# systemProp.java.compiler=

# Path of extension directory or directories Deprecated. This property, and the mechanism which implements it, may be removed in a future release.
# systemProp.java.ext.dirs=

# Operating system name
# systemProp.os.name=

# Operating system architecture
# systemProp.os.arch=

# Operating system version
# systemProp.os.version=

# File separator ("/" on UNIX)
# systemProp.file.separator=

# Path separator (":" on UNIX)
# systemProp.path.separator=

# Line separator ("\n" on UNIX)
# systemProp.line.separator=

# User's account name
# systemProp.user.name=

# User's home directory
# systemProp.user.home=

# User's current working directory
# systemProp.user.dir=
