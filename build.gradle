buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.21"
    }

}

plugins {
    // id 'java'
    id "java-library"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    // id 'application'
    id "jacoco"
    id "checkstyle"
    id "org.sonarqube" version "2.7"
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.31.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.4.1"
    testImplementation "org.assertj:assertj-core:3.12.2"
    testImplementation 'org.jacoco:org.jacoco.build:0.8.3'
}

allprojects {}

subprojects {}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.3"
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
    additionalSourceDirs = files("src/main/kotlin")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}
